#include <SoftwareSerial.h> //시리얼 통신 라이브러리 호출
#include <Servo.h>
 
//모터 PIN 설정
#define LEFT_A1 2 //왼쪽 바퀴
#define LEFT_B1 3 //왼쪽 바퀴
#define RIGHT_A2 4 //오른쪽 바퀴
#define RIGHT_B2 5//오른쪽 바퀴
 
//초음파 센서 PIN 설정
#define IR_TRIG 8 //TRIG 핀 설정 (초음파 보내는 핀)
#define IR_ECHO 7 //ECHO 핀 설정 (반사된 초음파 받는 핀)

Servo servo;  // object 생성
Servo leftServo;
Servo rightServo;

int pos = 90;    // 각 위치

 
void setup() {
  Serial.begin(9600);   //시리얼모니터 
 
  //모터 핀모드 설정
  pinMode(LEFT_A1, OUTPUT);
  pinMode(RIGHT_A2, OUTPUT);
  pinMode(LEFT_B1, OUTPUT);
  pinMode(RIGHT_B2, OUTPUT);  
 
  //초음파 센서 핀모드 설정
  pinMode(IR_TRIG, OUTPUT);
  pinMode(IR_ECHO, INPUT);

  leftServo.attach(9);
  rightServo.attach(10);

}
 
void loop() {
  float duration, distance;
  String inData = "";
  char* inDataBuf = 0;
  char incommingMsg = 0;
  digitalWrite(IR_TRIG, HIGH);
  delay(10);
  digitalWrite(IR_TRIG, LOW);
 
  // echoPin 이 HIGH를 유지한 시간
  duration = pulseIn(IR_ECHO, HIGH);
  distance = ((float)(340 * duration) / 10000) / 2;
  Serial.print("\nDIstance : ");
  Serial.println(distance);
     
  if(distance < 20) {         //장애물 감지 (20cm 이내)
     Serial.println("stop");
     stop();  //정지(1초)
     Serial.println("backward");
     backward();  //후진(0.5초)
     int rnd = random(0,2);   //장애물 감지시 좌/우회전 랜덤처리
     if(rnd == 0){
        Serial.println("right");
        right();
     }else{
        Serial.println("left");
        left();
     }
   }else{         //장애물 없음
     Serial.println("forward");
     forward();
   }
   
    while(Serial.available()){
    incommingMsg = Serial.read();
    inData = inData + incommingMsg;
  }
  inDataBuf = (char*)malloc(sizeof(char)*inData.length()+1);
  inData.toCharArray(inDataBuf, inData.length()+1);
  //Serial.println(inDataBuf);
  delay(500);

  if(strncmp(inDataBuf, "up", 2) == 0){
    leftServo.write(180);
    rightServo.write(0);
    Serial.println("up");
    delay(1500);
  }
  else if(strncmp(inDataBuf, "down" ,4) == 0){
    leftServo.write(0);
    rightServo.write(180);
    Serial.println("down");
    delay(1500);
  }
}
 
void forward(){
  digitalWrite(LEFT_A1, HIGH);
  digitalWrite(LEFT_B1, LOW);
  digitalWrite(RIGHT_A2, HIGH);
  digitalWrite(RIGHT_B2, LOW);
}
void backward(){
  digitalWrite(LEFT_A1, LOW);
  digitalWrite(LEFT_B1, HIGH);
  digitalWrite(RIGHT_A2, LOW);
  digitalWrite(RIGHT_B2, HIGH);
  delay(500);
}
void left(){
  digitalWrite(LEFT_A1, LOW);
  digitalWrite(LEFT_B1, HIGH);
  digitalWrite(RIGHT_A2, HIGH);
  digitalWrite(RIGHT_B2, LOW);
  delay(1000);
}
void right(){
  digitalWrite(LEFT_A1, HIGH);
  digitalWrite(LEFT_B1, LOW);
  digitalWrite(RIGHT_A2, LOW);
  digitalWrite(RIGHT_B2, HIGH);
  delay(1000);
}
void stop(){
  digitalWrite(LEFT_A1, LOW);
  digitalWrite(LEFT_B1, LOW);
  digitalWrite(RIGHT_A2, LOW);
  digitalWrite(RIGHT_B2, LOW);
  delay(1000);
}
